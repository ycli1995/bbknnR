// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// correct_idx_cpp
Eigen::MatrixXd correct_idx_cpp(Eigen::MatrixXd nnidx, std::vector<double>& raw_idx);
RcppExport SEXP _bbknnR_correct_idx_cpp(SEXP nnidxSEXP, SEXP raw_idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type nnidx(nnidxSEXP);
    Rcpp::traits::input_parameter< std::vector<double>& >::type raw_idx(raw_idxSEXP);
    rcpp_result_gen = Rcpp::wrap(correct_idx_cpp(nnidx, raw_idx));
    return rcpp_result_gen;
END_RCPP
}
// trim_graph
Eigen::SparseMatrix<double> trim_graph(Eigen::SparseMatrix<double> cnt, int trim);
RcppExport SEXP _bbknnR_trim_graph(SEXP cntSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type cnt(cntSEXP);
    Rcpp::traits::input_parameter< int >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(trim_graph(cnt, trim));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bbknnR_correct_idx_cpp", (DL_FUNC) &_bbknnR_correct_idx_cpp, 2},
    {"_bbknnR_trim_graph", (DL_FUNC) &_bbknnR_trim_graph, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_bbknnR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
